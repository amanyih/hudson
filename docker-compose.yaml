version: '3.9'

services:
  proxy:
    container_name: proxy_server
    image: nginx:alpine
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    restart: 'unless-stopped'
    networks:
      - backend

  server:
    container_name: server
    working_dir: /app
    build:
      context: ./
      dockerfile: Dockerfile.dev
    ports:
      - '5000:5000'
    environment:
      DATABASE_URL: ${DATABASE_URL}
    volumes:
      - ./:/app
      - /app/node_modules
    restart: 'unless-stopped'
    networks:
      - backend
    depends_on:
      - postgresql

  postgresql:
    container_name: postgresql
    image: postgis/postgis:17-3.4-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
    networks:
      - backend
    volumes:
      - db_data:/var/lib/postgresql/data

networks:
  backend:
    driver: bridge

volumes:
  data:
    driver: local
  db_data:
